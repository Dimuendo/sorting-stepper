{"version":3,"sources":["Components/TopAppBar.jsx","Components/Bar.jsx","Components/BarContainer.jsx","Algorithms/BubbleSort.js","Components/BotAppBar.jsx","Components/BasePage.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","btmAppBar","top","bottom","btnContainer","marginLeft","spacing","generateBtn","color","sortBtn","title","divider","backgroundColor","palette","secondary","dark","TopAppBar","props","classes","Box","AppBar","position","Toolbar","Grid","container","alignItems","justify","item","display","Typography","variant","className","Divider","orientation","flexItem","Button","onClick","setArray","arrayGenerator","arrayLength","setPaused","setStep","setRefs","createRefs","resetBars","refs","ButtonGroup","setSort","bar","height","barHeight","width","barWidth","barMargin","transition","Bar","React","forwardRef","ref","currRef","index","id","BarContainer","justifyContent","numArray","map","num","key","origBubblePositions","numArrayLen","lowest","i","current","getBoundingClientRect","x","origPositions","icon","fontSize","sliderLabel","marginTop","controls","sliderContainer","BotAppBar","xs","align","Slider","defaultValue","step","min","max","onChange","event","value","setAniSpeed","paused","setSkipForward","createMuiTheme","primary","main","text","arrayLen","randNum","Math","floor","random","push","createRef","style","transform","BasePage","useState","currStep","sort","skipForward","aniSpeed","useEffect","interval","swaps","numArrayCopy","JSON","parse","stringify","len","length","j","temp","BubbleSort","clearInterval","setInterval","allPositions","positionsArray","positions","swap","bar1Pos","bar2Pos","BubblePositions","prevSwap","bar1","bar2","translateX1Amt","translateX2Amt","light","sortAnimation","ThemeProvider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0c2c075.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: '#008B8B',\r\n    },\r\n    btmAppBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    btnContainer: {\r\n        marginLeft: theme.spacing(3),\r\n    },\r\n    generateBtn: {\r\n        color: 'white',\r\n        marginLeft: '10px',\r\n    },\r\n    sortBtn: {\r\n        color: 'white',\r\n        // marginTop: '2px',\r\n    },\r\n    title: {\r\n    },\r\n    divider: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        marginLeft: '10px',\r\n    },\r\n}));\r\n\r\nfunction TopAppBar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Grid \r\n                        container\r\n                        alignItems='center'\r\n                        justify='space-between'\r\n                    >\r\n                        <Grid item>\r\n                            <Box display='flex'>\r\n                                <Typography variant=\"h5\" className={classes.title} color='textPrimary'>\r\n                                    Sorting Stepper\r\n                                </Typography>\r\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider} variant='fullWidth' />\r\n                                <Button\r\n                                    className={classes.generateBtn}\r\n                                    color='secondary' \r\n                                    onClick={ () => {\r\n                                        props.setArray(props.arrayGenerator(props.arrayLength))\r\n                                        props.setPaused(true)\r\n                                        props.setStep(0)\r\n                                        props.setRefs(props.createRefs())\r\n                                        props.resetBars(props.refs)\r\n                                    }}>\r\n                                    Generate Array\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                        <ButtonGroup className={classes.btnContainer} variant='text' color='secondary'>\r\n                            <Button \r\n                                className={classes.sortBtn}\r\n                                onClick={ () => {\r\n                                    props.setSort()\r\n                                    props.setPaused()\r\n                                }}\r\n                            >\r\n                                Bubble Sort\r\n                            </Button>\r\n                            <Button \r\n                                className={classes.sortBtn} \r\n                            >\r\n                                Selection Sort\r\n                            </Button>\r\n                            <Button \r\n                                className={classes.sortBtn} \r\n                            >\r\n                                Merge Sort\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TopAppBar\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    bar: {\r\n        height: props => `${props.barHeight}px`,\r\n        width: props => `${props.barWidth}px`,\r\n        marginLeft: props => `${props.barMargin}px`,\r\n        backgroundColor: 'black',\r\n        transition: 'transform 0.5s ease-in, color 1s ease-in',\r\n    },\r\n}));\r\n\r\nconst Bar = React.forwardRef((props, ref) => {\r\n    const classes = useStyles(props)\r\n    const currRef = ref[props.index]\r\n\r\n    return(\r\n        <div className={classes.bar} id={props.id} ref={currRef}></div>\r\n    )\r\n})\r\n\r\nexport default Bar\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Bar from './Bar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: '#008B8B',\r\n    },\r\n}));\r\n\r\nfunction BarContainer(props) {\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box className={classes.root} display='flex' justifyContent='center'>\r\n            {props.numArray.map((num, index) => (\r\n                <Bar \r\n                    barHeight={num.num * 10}\r\n                    barWidth={props.barWidth}\r\n                    barMargin={props.barMargin}\r\n                    key={index} \r\n                    id={`bar-${index}`} \r\n                    ref={props.refs} \r\n                    index={index}>\r\n                </Bar>\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BarContainer\r\n","function origBubblePositions(refs, numArrayLen, barWidth, barMargin) {\r\n    let lowest = 10000\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        const position = refs[i].current.getBoundingClientRect().x\r\n        if (position < lowest) {\r\n            lowest = position\r\n        }\r\n    }\r\n\r\n    let origPositions = {}\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        origPositions[i] = lowest + i * (barWidth + barMargin)\r\n    }\r\n    return origPositions\r\n}\r\n\r\nfunction BubblePositions(refs, swaps, numArrayLen, barWidth, barMargin) {\r\n    const positionsArray = []\r\n    const positions = origBubblePositions(refs, numArrayLen, barWidth, barMargin)\r\n    const origPositions = origBubblePositions(refs, numArrayLen, barWidth, barMargin)\r\n    positionsArray.push(origPositions)\r\n\r\n    for (let i = 0; i < swaps.length; i++) {\r\n        const swap = swaps[i]\r\n\r\n        const bar1Pos = positions[swap[0].index]\r\n        const bar2Pos = positions[swap[1].index]\r\n\r\n        positions[swap[0].index] = bar2Pos\r\n        positions[swap[1].index] = bar1Pos\r\n\r\n        positionsArray.push(JSON.parse(JSON.stringify(positions)))\r\n        // positionsArray.push(positions)\r\n    }\r\n\r\n    return {'origPositions': origPositions, 'positions': positionsArray}\r\n}\r\n\r\nfunction BubbleSort(numArray) {\r\n    const numArrayCopy = JSON.parse(JSON.stringify(numArray))\r\n    const len = numArrayCopy.length\r\n    const swaps = []\r\n    for (let i = 0; i < len; i++) {\r\n        for (let j = 0; j < len - i - 1; j++) {\r\n            if (numArrayCopy[j].num > numArrayCopy[j + 1].num) {\r\n                swaps.push([numArrayCopy[j], numArrayCopy[j + 1]])\r\n                const temp = numArrayCopy[j]\r\n                numArrayCopy[j] = numArrayCopy[j + 1]\r\n                numArrayCopy[j + 1] = temp\r\n            }\r\n        }\r\n    }\r\n    return swaps\r\n}\r\n\r\nexport {\r\n    BubbleSort,\r\n    BubblePositions\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btmAppBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    icon: {\r\n        fontSize: 30,\r\n    },\r\n    sliderLabel: {\r\n        marginTop: '10px',\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justify: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    sliderContainer: {\r\n    },\r\n}));\r\n\r\nfunction BotAppBar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar position=\"fixed\" className={classes.btmAppBar}>\r\n                <Toolbar>\r\n                    <Grid \r\n                        container\r\n                        justify='space-between'\r\n                        alignItems='center'\r\n                    >\r\n                        <Grid item xs={1}>\r\n                            <Box className={classes.sliderContainer}>\r\n                                <Typography className={classes.sliderLabel} align='left' variant='body1' color='textPrimary'>\r\n                                    Animation Speed\r\n                                </Typography>\r\n                                <Slider\r\n                                    color='secondary'\r\n                                    defaultValue={550}\r\n                                    step={50}\r\n                                    min={200}\r\n                                    max={900}\r\n                                    onChange={ (event, value) => {props.setAniSpeed(-(value - 550) + 550)}}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <ButtonGroup className={classes.controls}>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {props.setPaused(!props.paused)} }\r\n                                    variant='text'\r\n                                >\r\n                                    <SkipPreviousIcon className={classes.icon}/>\r\n                                </Button>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {props.setPaused(!props.paused)} }\r\n                                    variant='text'\r\n                                >\r\n                                    {props.paused ? <PlayArrowIcon className={classes.icon}/> : <PauseIcon className={classes.icon}/>}\r\n                                </Button>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {props.setSkipForward(true); props.setPaused(false)} }\r\n                                    variant='text'\r\n                                >\r\n                                    <SkipNextIcon className={classes.icon}/>\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Grid>\r\n                        <Grid item xs={1} />\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BotAppBar\r\n","import React, { createRef, useEffect } from 'react';\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport TopAppBar from './TopAppBar'\r\nimport BarContainer from './BarContainer'\r\nimport {BubbleSort, BubblePositions} from '../Algorithms/BubbleSort';\r\nimport BotAppBar from './BotAppBar';\r\n\r\nconst ARRAY_LENGTH = 10\r\nconst BAR_WIDTH = 50\r\nconst BAR_MARGIN = 2\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: '#008B8B',\r\n    },\r\n}))\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#212121',\r\n        },\r\n        secondary: {\r\n            main: '#e91e63',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n        }\r\n    }\r\n})\r\n\r\nfunction arrayGenerator(arrayLen) {\r\n    const numArray = []\r\n    for (let i = 0; i < arrayLen; i++) {\r\n        const randNum = Math.floor(Math.random() * 50) + 1\r\n        numArray.push({\r\n            'index': i,\r\n            'num': randNum,\r\n        })\r\n    }\r\n    return numArray\r\n}\r\n\r\nfunction createRefs() {\r\n    const refs = {}\r\n    for (let i = 0; i < ARRAY_LENGTH; i++) {\r\n        refs[i] = createRef()\r\n    }\r\n    return refs\r\n}\r\n\r\nfunction resetBars(refs) {\r\n    for (let i = 0; i < ARRAY_LENGTH; i++) {\r\n        const ref = refs[i]\r\n        const bar = ref.current\r\n        bar.style.transform = 'none'\r\n        bar.style.backgroundColor = 'black'\r\n    }\r\n}\r\n\r\nfunction sortAnimation(swaps, currStep, refs, allPositions) {\r\n    if (currStep !== 0) {\r\n        const prevSwap = swaps[currStep - 1]\r\n        refs[prevSwap[0].index].current.style.backgroundColor = 'black'\r\n        refs[prevSwap[1].index].current.style.backgroundColor = 'black'\r\n    }\r\n\r\n    const positions = allPositions.positions[currStep]\r\n    const origPositions = allPositions.origPositions\r\n\r\n    const swap = swaps[currStep]\r\n    const bar1 = refs[swap[0].index].current\r\n    const bar2 = refs[swap[1].index].current\r\n\r\n    const bar1Pos = positions[swap[0].index]\r\n    const bar2Pos = positions[swap[1].index]\r\n    const bar1OrigPos = origPositions[swap[0].index]\r\n    const bar2OrigPos = origPositions[swap[1].index]\r\n\r\n    const translateX1Amt = bar2Pos - bar1OrigPos\r\n    const translateX2Amt = bar1Pos - bar2OrigPos\r\n\r\n    bar1.style.backgroundColor = theme.palette.secondary.dark\r\n    bar2.style.backgroundColor = theme.palette.secondary.light\r\n    bar1.style.transform = `translateX(${translateX1Amt}px)`\r\n    bar2.style.transform = `translateX(${translateX2Amt}px)`\r\n\r\n    if (currStep === swaps.length - 1) {\r\n        bar1.style.backgroundColor = 'black'\r\n        bar2.style.backgroundColor = 'black'\r\n    }\r\n}\r\n\r\nfunction BasePage() {\r\n    const classes = useStyles(theme)\r\n    const [numArray, setArray] = React.useState(arrayGenerator(ARRAY_LENGTH))\r\n    const [paused, setPaused] = React.useState(true)\r\n    const [currStep, setStep] = React.useState(0)\r\n    const [sort, setSort] = React.useState('bubble')\r\n    const [skipForward, setSkipForward] = React.useState(false)\r\n    const [refs, setRefs] = React.useState(createRefs())\r\n    const [aniSpeed, setAniSpeed] = React.useState(550)\r\n    \r\n    useEffect(() => {\r\n        let interval = null\r\n        const swaps = BubbleSort(numArray)\r\n        if (currStep >= swaps.length) setPaused(true)\r\n        if (!paused) {\r\n            interval = setInterval(() => {\r\n                if (sort === 'bubble') {\r\n                    const allPositions = BubblePositions(refs, swaps, numArray.length, BAR_WIDTH, BAR_MARGIN)\r\n                    sortAnimation(swaps, currStep, refs, allPositions)\r\n                }\r\n                setStep(currStep => currStep + 1)\r\n                if (skipForward) {\r\n                    setPaused(true)\r\n                    setSkipForward(false)\r\n                }\r\n            }, aniSpeed)\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [paused, currStep, refs, numArray, aniSpeed, skipForward, sort])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n                <TopAppBar\r\n                    arrayLength={ARRAY_LENGTH}\r\n                    arrayGenerator={arrayGenerator}\r\n                    setArray={setArray}\r\n                    setPaused={setPaused}\r\n                    setStep={setStep}\r\n                    setRefs={setRefs}\r\n                    createRefs={createRefs}\r\n                    refs={refs}\r\n                    resetBars={resetBars}\r\n                    setSort={setSort}\r\n                />\r\n\r\n                <BarContainer numArray={numArray} refs={refs} barWidth={BAR_WIDTH} barMargin={BAR_MARGIN}/>\r\n\r\n                <BotAppBar \r\n                    setPaused={setPaused}\r\n                    setAniSpeed={setAniSpeed}\r\n                    setSkipForward={setSkipForward}\r\n                    paused={paused}\r\n                />\r\n            </ThemeProvider>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default BasePage;\r\n","import React from 'react';\nimport BasePage from './Components/BasePage'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasePage></BasePage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}