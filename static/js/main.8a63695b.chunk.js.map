{"version":3,"sources":["Components/TopAppBar.jsx","Components/Bar.jsx","Components/BarContainer.jsx","Algorithms/BubbleSort.js","Algorithms/SelectionSort.js","Algorithms/SortAnimation.js","Components/BotAppBar.jsx","Components/BasePage.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","btnContainer","marginLeft","spacing","generateBtn","color","sortBtn","title","divider","backgroundColor","palette","secondary","dark","reset","props","setArray","arrayGenerator","arrayLen","setPaused","setStep","setRefs","createRefs","resetBars","refs","setSkipBackward","TopAppBar","classes","Box","AppBar","position","Toolbar","Grid","container","alignItems","justify","item","display","Typography","variant","className","Divider","orientation","flexItem","Button","onClick","ButtonGroup","currStep","setSort","bar","height","barHeight","width","barWidth","barMargin","transition","Bar","React","forwardRef","ref","currRef","index","id","BarContainer","justifyContent","numArray","map","num","key","origBubblePositions","numArrayLen","lowest","Number","MAX_SAFE_INTEGER","i","current","getBoundingClientRect","x","origPositions","origSelectionPositions","createMuiTheme","primary","main","text","SortAnimation","swaps","allPositions","skipBackward","positions","prevSwap","bar1","bar2","bar1Pos","translateX1Amt","translateX2Amt","style","transform","prevPrevSwap","light","backwardAnimation","swap","length","forwardAnimation","btmAppBar","top","bottom","icon","fontSize","sliderLabel","marginTop","controls","sliderContainer","BotAppBar","xs","align","Slider","defaultValue","step","min","max","onChange","event","value","setAniSpeed","paused","setSkipForward","root","randNum","Math","floor","random","push","createRef","getSwaps","sort","numArrayCopy","JSON","parse","stringify","len","j","temp","BubbleSort","SelectionSort","console","log","initiateAnimation","BAR_MARGIN","positionsArray","bar2Pos","BubblePositions","SelectionPositions","BasePage","matches","useMediaQuery","useState","skipForward","aniSpeed","useEffect","interval","clearInterval","setInterval","ThemeProvider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a63695b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnContainer: {\r\n        marginLeft: theme.spacing(3),\r\n    },\r\n    generateBtn: {\r\n        color: 'white',\r\n        marginLeft: '10px',\r\n    },\r\n    sortBtn: {\r\n        color: 'white',\r\n        // marginTop: '2px',\r\n    },\r\n    title: {\r\n    },\r\n    divider: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        marginLeft: '10px',\r\n    },\r\n}));\r\n\r\nfunction reset(props) {\r\n    props.setArray(props.arrayGenerator(props.arrayLen))\r\n    props.setPaused(true)\r\n    props.setStep(0)\r\n    props.setRefs(props.createRefs(props.arrayLen))\r\n    props.resetBars(props.refs, props.arrayLen)\r\n    props.setSkipBackward(false)\r\n}\r\n\r\nfunction TopAppBar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Grid \r\n                        container\r\n                        alignItems='center'\r\n                        justify='space-between'\r\n                    >\r\n                        <Grid item>\r\n                            <Box display='flex'>\r\n                                <Typography variant=\"h5\" className={classes.title} color='textPrimary'>\r\n                                    Sorting Stepper\r\n                                </Typography>\r\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider} variant='fullWidth' />\r\n                                <Button\r\n                                    className={classes.generateBtn}\r\n                                    color='secondary' \r\n                                    onClick={ () => {\r\n                                        reset(props)\r\n                                        // props.setArray(props.arrayGenerator(props.arrayLen))\r\n                                        // props.setPaused(true)\r\n                                        // props.setStep(0)\r\n                                        // props.setRefs(props.createRefs(props.arrayLen))\r\n                                        // props.resetBars(props.refs, props.arrayLen)\r\n                                        // props.setSkipBackward(false)\r\n                                    }}>\r\n                                    Generate Array\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                        <ButtonGroup className={classes.btnContainer} variant='text' color='secondary'>\r\n                            <Button \r\n                                className={classes.sortBtn}\r\n                                onClick={ () => {\r\n                                    if (props.currStep !== 0) reset(props)\r\n                                    props.setSort('bubble')\r\n                                    props.setPaused(false)\r\n                                }}\r\n                            >\r\n                                Bubble Sort\r\n                            </Button>\r\n                            <Button \r\n                                className={classes.sortBtn}\r\n                                onClick={ () => {\r\n                                    if (props.currStep !== 0) reset(props)\r\n                                    props.setSort('selection')\r\n                                    props.setPaused(false)\r\n                                }}\r\n                            >\r\n                                Selection Sort\r\n                            </Button>\r\n                            {/* <Button \r\n                                className={classes.sortBtn} \r\n                            >\r\n                                Quick Sort\r\n                            </Button>\r\n                            <Button \r\n                                className={classes.sortBtn} \r\n                            >\r\n                                Merge Sort\r\n                            </Button> */}\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TopAppBar\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    bar: {\r\n        height: props => `${props.barHeight}px`,\r\n        width: props => `${props.barWidth}px`,\r\n        marginLeft: props => `${props.barMargin}px`,\r\n        backgroundColor: 'black',\r\n        transition: 'transform 0.5s ease-in, color 1s ease-in',\r\n    },\r\n}));\r\n\r\nconst Bar = React.forwardRef((props, ref) => {\r\n    const classes = useStyles(props)\r\n    const currRef = ref[props.index]\r\n\r\n    return(\r\n        <div className={classes.bar} id={props.id} ref={currRef}></div>\r\n    )\r\n})\r\n\r\nexport default Bar\r\n","import React from 'react'\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Bar from './Bar'\r\n\r\nfunction BarContainer(props) {\r\n    return(\r\n        <Box display='flex' justifyContent='center'>\r\n            {props.numArray.map((num, index) => (\r\n                <Bar \r\n                    barHeight={num.num * 10}\r\n                    barWidth={props.barWidth}\r\n                    barMargin={props.barMargin}\r\n                    key={index} \r\n                    id={`bar-${index}`} \r\n                    ref={props.refs} \r\n                    index={index}>\r\n                </Bar>\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BarContainer\r\n","function origBubblePositions(refs, numArrayLen, barWidth, barMargin) {\r\n    let lowest = Number.MAX_SAFE_INTEGER\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        const position = refs[i].current.getBoundingClientRect().x\r\n        if (position < lowest) {\r\n            lowest = position\r\n        }\r\n    }\r\n\r\n    let origPositions = {}\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        origPositions[i] = lowest + i * (barWidth + barMargin)\r\n    }\r\n    return origPositions\r\n}\r\n\r\nfunction BubblePositions(refs, swaps, numArrayLen, barWidth, barMargin) {\r\n    const positionsArray = []\r\n    const positions = origBubblePositions(refs, numArrayLen, barWidth, barMargin)\r\n    const origPositions = origBubblePositions(refs, numArrayLen, barWidth, barMargin)\r\n    positionsArray.push(origPositions)\r\n\r\n    for (let i = 0; i < swaps.length; i++) {\r\n        const swap = swaps[i]\r\n\r\n        const bar1Pos = positions[swap[0].index]\r\n        const bar2Pos = positions[swap[1].index]\r\n\r\n        positions[swap[0].index] = bar2Pos\r\n        positions[swap[1].index] = bar1Pos\r\n\r\n        positionsArray.push(JSON.parse(JSON.stringify(positions)))\r\n    }\r\n\r\n    return {'origPositions': origPositions, 'positions': positionsArray}\r\n}\r\n\r\nfunction BubbleSort(numArray) {\r\n    const numArrayCopy = JSON.parse(JSON.stringify(numArray))\r\n    const len = numArrayCopy.length\r\n    const swaps = []\r\n    for (let i = 0; i < len; i++) {\r\n        for (let j = 0; j < len - i - 1; j++) {\r\n            if (numArrayCopy[j].num > numArrayCopy[j + 1].num) {\r\n                swaps.push([numArrayCopy[j], numArrayCopy[j + 1]])\r\n                const temp = numArrayCopy[j]\r\n                numArrayCopy[j] = numArrayCopy[j + 1]\r\n                numArrayCopy[j + 1] = temp\r\n            }\r\n        }\r\n    }\r\n    return swaps\r\n}\r\n\r\nexport {\r\n    BubbleSort,\r\n    BubblePositions\r\n}","function origSelectionPositions(refs, numArrayLen, barWidth, barMargin) {\r\n    let lowest = Number.MAX_SAFE_INTEGER\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        const position = refs[i].current.getBoundingClientRect().x\r\n        if (position < lowest) {\r\n            lowest = position\r\n        }\r\n    }\r\n\r\n    let origPositions = {}\r\n    for (let i = 0; i < numArrayLen; i++) {\r\n        origPositions[i] = lowest + i * (barWidth + barMargin)\r\n    }\r\n    return origPositions\r\n}\r\n\r\nfunction SelectionPositions(refs, swaps, numArrayLen, barWidth, barMargin) {\r\n    const positionsArray = []\r\n    const positions = origSelectionPositions(refs, numArrayLen, barWidth, barMargin)\r\n    const origPositions = origSelectionPositions(refs, numArrayLen, barWidth, barMargin)\r\n    positionsArray.push(origPositions)\r\n\r\n    for (let i = 0; i < swaps.length; i++) {\r\n        const swap = swaps[i]\r\n\r\n        const bar1Pos = positions[swap[0].index]\r\n        const bar2Pos = positions[swap[1].index]\r\n\r\n        positions[swap[0].index] = bar2Pos\r\n        positions[swap[1].index] = bar1Pos\r\n\r\n        positionsArray.push(JSON.parse(JSON.stringify(positions)))\r\n    }\r\n\r\n    return {'origPositions': origPositions, 'positions': positionsArray}\r\n}\r\n\r\nfunction SelectionSort(numArray) {\r\n    const numArrayCopy = JSON.parse(JSON.stringify(numArray))\r\n    const len = numArrayCopy.length\r\n    const swaps = []\r\n    for (let i = 0; i < len; i++) {\r\n        let min = i\r\n        for (let j = i + 1; j < len; j++){\r\n            if (numArrayCopy[j].num < numArrayCopy[min].num) {\r\n                min = j\r\n            }\r\n        }\r\n        if (min !== i) {\r\n            swaps.push([numArrayCopy[i], numArrayCopy[min]])\r\n            const temp = numArrayCopy[i];\r\n            numArrayCopy[i] = numArrayCopy[min]\r\n            numArrayCopy[min] = temp\r\n        }\r\n    }\r\n    return swaps\r\n}\r\n\r\nexport {\r\n    SelectionSort,\r\n    SelectionPositions\r\n}","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#212121',\r\n        },\r\n        secondary: {\r\n            main: '#e91e63',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n        }\r\n    }\r\n})\r\n\r\nfunction forwardAnimation(currStep, swaps, refs, positions, origPositions) {\r\n    if (currStep !== 0) {\r\n        const prevSwap = swaps[currStep - 1]\r\n        refs[prevSwap[0].index].current.style.backgroundColor = 'black'\r\n        refs[prevSwap[1].index].current.style.backgroundColor = 'black'\r\n    }\r\n\r\n    const swap = swaps[currStep]\r\n    const bar1 = refs[swap[0].index].current\r\n    const bar2 = refs[swap[1].index].current\r\n\r\n    const bar1Pos = positions[swap[0].index]\r\n    const bar2Pos = positions[swap[1].index]\r\n    const bar1OrigPos = origPositions[swap[0].index]\r\n    const bar2OrigPos = origPositions[swap[1].index]\r\n\r\n    const translateX1Amt = bar2Pos - bar1OrigPos\r\n    const translateX2Amt = bar1Pos - bar2OrigPos\r\n\r\n    bar1.style.backgroundColor = theme.palette.secondary.dark\r\n    bar2.style.backgroundColor = theme.palette.secondary.light\r\n    bar1.style.transform = `translateX(${translateX1Amt}px)`\r\n    bar2.style.transform = `translateX(${translateX2Amt}px)`\r\n\r\n    if (currStep === swaps.length - 1) {\r\n        bar1.style.backgroundColor = 'black'\r\n        bar2.style.backgroundColor = 'black'\r\n    }\r\n}\r\n\r\nfunction backwardAnimation(swaps, currStep, refs, positions, origPositions) {\r\n    const prevSwap = swaps[currStep - 1]\r\n    const bar1 = refs[prevSwap[0].index].current\r\n    const bar2 = refs[prevSwap[1].index].current\r\n\r\n    const bar1Pos = positions[prevSwap[0].index]\r\n    const bar2Pos = positions[prevSwap[1].index]\r\n    const bar1OrigPos = origPositions[prevSwap[0].index]\r\n    const bar2OrigPos = origPositions[prevSwap[1].index]\r\n\r\n    const translateX1Amt = bar2Pos - bar1OrigPos\r\n    const translateX2Amt = bar1Pos - bar2OrigPos\r\n\r\n    bar1.style.backgroundColor = 'black'\r\n    bar2.style.backgroundColor = 'black'\r\n    bar1.style.transform = `translateX(${translateX1Amt}px)`\r\n    bar2.style.transform = `translateX(${translateX2Amt}px)`\r\n    \r\n    if (currStep > 1) {\r\n        const prevPrevSwap = swaps[currStep - 2]\r\n        const bar1 = refs[prevPrevSwap[0].index].current\r\n        const bar2 = refs[prevPrevSwap[1].index].current\r\n        bar1.style.backgroundColor = theme.palette.secondary.dark\r\n        bar2.style.backgroundColor = theme.palette.secondary.light\r\n    }\r\n}\r\n\r\nfunction SortAnimation(swaps, currStep, refs, allPositions, skipBackward) {\r\n    const positions = allPositions.positions[currStep]\r\n    const origPositions = allPositions.origPositions\r\n\r\n    if (skipBackward) {\r\n        backwardAnimation(swaps, currStep, refs, positions, origPositions)\r\n    } else {\r\n        forwardAnimation(currStep, swaps, refs, positions, origPositions)\r\n    }\r\n}\r\n\r\nexport {\r\n    SortAnimation\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btmAppBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    icon: {\r\n        fontSize: 30,\r\n    },\r\n    sliderLabel: {\r\n        marginTop: '10px',\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justify: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    sliderContainer: {\r\n    },\r\n}));\r\n\r\nfunction BotAppBar(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar position=\"fixed\" className={classes.btmAppBar}>\r\n                <Toolbar>\r\n                    <Grid \r\n                        container\r\n                        justify='space-between'\r\n                        alignItems='center'\r\n                    >\r\n                        <Grid item xs={1}>\r\n                            <Box className={classes.sliderContainer}>\r\n                                <Typography className={classes.sliderLabel} align='left' variant='body1' color='textPrimary'>\r\n                                    Animation Speed\r\n                                </Typography>\r\n                                <Slider\r\n                                    color='secondary'\r\n                                    defaultValue={550}\r\n                                    step={50}\r\n                                    min={200}\r\n                                    max={900}\r\n                                    onChange={ (event, value) => {props.setAniSpeed(-(value - 550) + 550)}}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <ButtonGroup className={classes.controls}>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {\r\n                                        if (props.currStep !== 0) {\r\n                                            props.setSkipBackward(true)\r\n                                            props.setPaused(false)\r\n                                        }\r\n                                    }}\r\n                                    variant='text'\r\n                                >\r\n                                    <SkipPreviousIcon className={classes.icon}/>\r\n                                </Button>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {props.setPaused(!props.paused)} }\r\n                                    variant='text'\r\n                                >\r\n                                    {props.paused ? <PlayArrowIcon className={classes.icon}/> : <PauseIcon className={classes.icon}/>}\r\n                                </Button>\r\n                                <Button\r\n                                    color='secondary' \r\n                                    onClick={ () => {props.setSkipForward(true); props.setPaused(false)} }\r\n                                    variant='text'\r\n                                >\r\n                                    <SkipNextIcon className={classes.icon}/>\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Grid>\r\n                        <Grid item xs={1} />\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BotAppBar\r\n","import React, { createRef, useEffect } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport TopAppBar from './TopAppBar'\r\nimport BarContainer from './BarContainer'\r\nimport { BubbleSort, BubblePositions } from '../Algorithms/BubbleSort';\r\nimport { SelectionSort, SelectionPositions } from '../Algorithms/SelectionSort'\r\nimport { SortAnimation } from '../Algorithms/SortAnimation'\r\nimport BotAppBar from './BotAppBar';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nconst BAR_MARGIN = 2\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: '#008B8B',\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#212121',\r\n        },\r\n        secondary: {\r\n            main: '#e91e63',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n        }\r\n    }\r\n})\r\n\r\nfunction arrayGenerator(arrayLen) {\r\n    const numArray = []\r\n    for (let i = 0; i < arrayLen; i++) {\r\n        const randNum = Math.floor(Math.random() * 50) + 1\r\n        numArray.push({\r\n            'index': i,\r\n            'num': randNum,\r\n        })\r\n    }\r\n    return numArray\r\n}\r\n\r\nfunction createRefs(arrayLen) {\r\n    const refs = {}\r\n    for (let i = 0; i < arrayLen; i++) {\r\n        refs[i] = createRef()\r\n    }\r\n    return refs\r\n}\r\n\r\nfunction resetBars(refs, arrayLen) {\r\n    for (let i = 0; i < arrayLen; i++) {\r\n        const ref = refs[i]\r\n        const bar = ref.current\r\n        bar.style.transform = 'none'\r\n        bar.style.backgroundColor = 'black'\r\n    }\r\n}\r\n\r\nfunction getSwaps(sort, numArray) {\r\n    let swaps = [];\r\n    switch (sort) {\r\n        case 'bubble':\r\n            swaps = BubbleSort(numArray)\r\n            break\r\n        case 'selection':\r\n            swaps = SelectionSort(numArray)\r\n            break\r\n        default:\r\n            console.log('No sort specified')\r\n    }\r\n    return swaps\r\n}\r\n\r\nfunction initiateAnimation(refs, swaps, arrayLen, barWidth, BAR_MARGIN, skipBackward, sort, currStep) {\r\n    let allPositions = null\r\n    switch (sort) {\r\n        case 'bubble':\r\n            allPositions = BubblePositions(refs, swaps, arrayLen, barWidth, BAR_MARGIN)\r\n            SortAnimation(swaps, currStep, refs, allPositions, skipBackward)\r\n            break\r\n        case 'selection':\r\n            allPositions = SelectionPositions(refs, swaps, arrayLen, barWidth, BAR_MARGIN)\r\n            SortAnimation(swaps, currStep, refs, allPositions, skipBackward)\r\n            break\r\n        default:\r\n            console.log('No animation specified')\r\n    }\r\n}\r\n\r\nfunction BasePage() {\r\n    const classes = useStyles()\r\n    const matches = useMediaQuery('(min-width:700px)');\r\n    let arrayLen = 0\r\n    let barWidth = 0\r\n    if (matches) {\r\n        arrayLen = 10\r\n        barWidth = 50\r\n    } else {\r\n        arrayLen = 10\r\n        barWidth = 25\r\n    }\r\n\r\n    // State\r\n    const [numArray, setArray] = React.useState(arrayGenerator(arrayLen))\r\n    const [paused, setPaused] = React.useState(true)\r\n    const [currStep, setStep] = React.useState(0)\r\n    const [sort, setSort] = React.useState('bubble')\r\n    const [skipForward, setSkipForward] = React.useState(false)\r\n    const [skipBackward, setSkipBackward] = React.useState(false)\r\n    const [refs, setRefs] = React.useState(createRefs(arrayLen))\r\n    const [aniSpeed, setAniSpeed] = React.useState(550)\r\n    \r\n    useEffect(() => {\r\n        let interval = null\r\n        const swaps = getSwaps(sort, numArray)\r\n        if (currStep >= swaps.length && !skipBackward) {\r\n            setPaused(true)\r\n            setSkipForward(false)\r\n        }\r\n        if (!paused) {\r\n            interval = setInterval(() => {\r\n                initiateAnimation(refs, swaps, arrayLen, barWidth, BAR_MARGIN, skipBackward, sort, currStep)\r\n                setStep(currStep => currStep + 1)\r\n                if (skipForward) {\r\n                    setPaused(true)\r\n                    setSkipForward(false)\r\n                } else if (skipBackward) {\r\n                    setPaused(true)\r\n                    setSkipBackward(false)\r\n                    setStep(currStep => currStep - 2)\r\n                }\r\n            }, aniSpeed)\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [paused, currStep, refs, numArray, aniSpeed, skipForward, skipBackward, sort, arrayLen, barWidth])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n                <TopAppBar\r\n                    arrayLen={arrayLen}\r\n                    currStep={currStep}\r\n                    arrayGenerator={arrayGenerator}\r\n                    setArray={setArray}\r\n                    setPaused={setPaused}\r\n                    setStep={setStep}\r\n                    setRefs={setRefs}\r\n                    createRefs={createRefs}\r\n                    refs={refs}\r\n                    resetBars={resetBars}\r\n                    setSort={setSort}\r\n                    setSkipBackward={setSkipBackward}\r\n                />\r\n\r\n                <BarContainer numArray={numArray} refs={refs} barWidth={barWidth} barMargin={BAR_MARGIN}/>\r\n\r\n                <BotAppBar \r\n                    setPaused={setPaused}\r\n                    setAniSpeed={setAniSpeed}\r\n                    setSkipBackward={setSkipBackward}\r\n                    setSkipForward={setSkipForward}\r\n                    setStep={setStep}\r\n                    currStep={currStep}\r\n                    paused={paused}\r\n                />\r\n            </ThemeProvider>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default BasePage;\r\n","import React from 'react';\nimport BasePage from './Components/BasePage'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BasePage></BasePage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}